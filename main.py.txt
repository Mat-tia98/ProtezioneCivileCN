import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("BOT_TOKEN")
volontari = [123456789]  # Sostituisci con gli ID reali dei volontari
risposte = {}

async def allerta(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global risposte
    risposte = {v: None for v in volontari}
    keyboard = [[
        InlineKeyboardButton("‚úÖ Confermo", callback_data='confermo'),
        InlineKeyboardButton("‚ùå Rifiuto", callback_data='rifiuto')
    ]]
    markup = InlineKeyboardMarkup(keyboard)
    for vid in volontari:
        await context.bot.send_message(chat_id=vid, text="üö® CHIAMATA URGENTE üö®", reply_markup=markup)

async def risposta(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    risposte[query.from_user.id] = query.data
    await query.edit_message_text(f"Hai risposto: {query.data}")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    volontario_id = user.id
    nome = user.full_name
    await update.message.reply_text("Registrazione completata. Riceverai le allerte di emergenza.")
    
    # Salva su file
    with open("volontari.txt", "a") as f:
        f.write(f"{volontario_id}  # {nome}\n")

app = Application.builder().token(TOKEN).build()
app.add_handler(CommandHandler("allerta", allerta))
app.add_handler(CallbackQueryHandler(risposta))
app.add_handler(CommandHandler("start", start))
app.run_polling()
